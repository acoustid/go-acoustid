name: Build
on: [push]
jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.22
      id: go

    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up PostgreSQL databases
      uses: docker://quay.io/acoustid/postgresql:master
      with:
        entrypoint: /bin/bash
        args: ./scripts/dev/create-db.sh
      env:
        ACOUSTID_SQL_DIR: database/sql
        POSTGRES_DB: postgres
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: password
        POSTGRES_HOST: postgresql
        POSTGRES_PORT: 5432

    - name: Test
      run: ./scripts/ci/test.sh
      env:
        ACOUSTID_TEST_POSTGRESQL_HOST: localhost
        ACOUSTID_TEST_POSTGRESQL_PORT: ${{ job.services.postgresql.ports[5432] }}
        ACOUSTID_TEST_POSTGRESQL_USERNAME: acoustid
        ACOUSTID_TEST_POSTGRESQL_PASSWORD: acoustid
        ACOUSTID_TEST_REDIS_HOST: localhost
        ACOUSTID_TEST_REDIS_PORT: ${{ job.services.redis.ports[6379] }}

    - name: Build binaries
      run: ./scripts/ci/build.sh

    - name: Upload binaries
      uses: actions/upload-artifact@v1
      with:
        name: dist
        path: dist

    services:

      redis:
        image: redis:alpine
        ports:
          - 6379/tcp

      postgresql:
        image: quay.io/acoustid/postgresql:master
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - 5432/tcp
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password

  docker:
    name: Build Docker images
    runs-on: ubuntu-latest
    needs: build
    steps:

    - name: Check out code
      uses: actions/checkout@v3
      if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')

    - name: Download aindex binary
      uses: actions/download-artifact@v1
      with:
        name: dist
      if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')

    - name: Build Docker images
      run: ./scripts/ci/build-images.sh
      if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')

    - name: Push Docker images
      run: ./scripts/ci/push-images.sh
      env:
        QUAY_USERNAME: ${{ secrets.QUAY_USERNAME }}
        QUAY_PASSWORD: ${{ secrets.QUAY_PASSWORD }}
      if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
